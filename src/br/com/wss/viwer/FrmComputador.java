/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.wss.viwer;

import br.com.wss.utilidades.ClassUtils;
import br.com.wss.dao.ComputadorDao;
import br.com.wss.tabelas.TabelaComputador;
import br.com.wss.tabelas.Tabela;
import br.com.wss.modelo.Computador;
import br.com.wss.utilidades.ClassEvents;
import br.com.wss.utilidades.FocusLost;
import br.com.wss.utilidades.NumeroMaximoCaracters;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;

/**
 *
 * @author WILLIAM
 */
public final class FrmComputador extends javax.swing.JInternalFrame {

    ArrayList<Computador> dados;
    int modificador = 1;

    /**
     * Creates new form FrmComputador
     */
    public FrmComputador() {
        initComponents();
        eventFocus();

        jTId.setVisible(false);

        preencherTabela();
        jPComputador.setVisible(false);
        jBExcluir.setEnabled(false);
        jTNomeCoputador.setDocument(new NumeroMaximoCaracters(50));
        jTMacCoputador.setDocument(new NumeroMaximoCaracters(12));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaComputador = new javax.swing.JTable();
        jBNovo = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jPComputador = new javax.swing.JPanel();
        jLabelNomeComputador = new javax.swing.JLabel();
        jBCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jTNomeCoputador = new javax.swing.JTextField();
        jLabelMac = new javax.swing.JLabel();
        jTMacCoputador = new javax.swing.JTextField();
        jTId = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro Computador");
        setToolTipText("");

        jTabelaComputador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTabelaComputador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaComputadorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaComputador);

        jBNovo.setText("Novo");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jPComputador.setBorder(javax.swing.BorderFactory.createTitledBorder("Computador"));

        jLabelNomeComputador.setText("Descrição do Computador:");

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });
        jButtonSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonSalvarKeyPressed(evt);
            }
        });

        jTNomeCoputador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTNomeCoputadorFocusLost(evt);
            }
        });

        jLabelMac.setText("Mac do Computador:");

        jTMacCoputador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTMacCoputadorFocusLost(evt);
            }
        });

        jTId.setEditable(false);
        jTId.setText("Id");

        javax.swing.GroupLayout jPComputadorLayout = new javax.swing.GroupLayout(jPComputador);
        jPComputador.setLayout(jPComputadorLayout);
        jPComputadorLayout.setHorizontalGroup(
            jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPComputadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabelMac)
                        .addComponent(jLabelNomeComputador))
                    .addComponent(jTId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPComputadorLayout.createSequentialGroup()
                        .addComponent(jButtonSalvar)
                        .addGap(50, 50, 50)
                        .addComponent(jBCancelar))
                    .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTMacCoputador, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                        .addComponent(jTNomeCoputador)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPComputadorLayout.setVerticalGroup(
            jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPComputadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomeComputador)
                    .addComponent(jTNomeCoputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMac)
                    .addComponent(jTMacCoputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jBCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPComputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBExcluir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBNovo)
                    .addComponent(jBExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPComputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabelaComputadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaComputadorMouseClicked
        if (evt.getClickCount() == 2) {
            itensSelecionados();
            jBNovo.setEnabled(false);
            jBExcluir.setEnabled(true);
            jPComputador.setVisible(true);
            jButtonSalvar.setVisible(true);
            jButtonSalvar.setText("Editar");

            modificador = 2;
        }
    }//GEN-LAST:event_jTabelaComputadorMouseClicked

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        limparCampos();
        jPComputador.setVisible(false);
        jBExcluir.setEnabled(false);
        jBNovo.setEnabled(true);
        modificador = 1;
        modificarCampos();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        if (modificador == 1) {
            jPComputador.setVisible(true);
            jBExcluir.setEnabled(false);
            jBNovo.setEnabled(false);
            jButtonSalvar.setVisible(true);

            jButtonSalvar.setText("Salvar");
            limparCampos();
        } else {
            modificador = 1;
            jPComputador.setVisible(true);
            jBExcluir.setEnabled(false);
            jBNovo.setEnabled(false);
            jButtonSalvar.setVisible(true);

            jButtonSalvar.setText("Salvar");
            limparCampos();
        }
        jTNomeCoputador.requestFocus();
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (modificador == 1) {
            jButtonSalvar.setText("Salvar");
            cadastrar();

        } else if (modificador == 2) {
            jButtonSalvar.setText("Editar");
            atualizar();
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed

        Computador computadorTemp = new Computador();
        computadorTemp.setId(Integer.parseInt(jTId.getText()));
        ComputadorDao dao = new ComputadorDao();

        dao.deletar(computadorTemp);
        jPComputador.setVisible(false);
        jBNovo.setEnabled(true);
        jBExcluir.setEnabled(false);
        preencherTabela();
        limparCampos();

    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jButtonSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSalvarKeyPressed
        if (modificador == 1) {
            jButtonSalvar.setText("Salvar");
            cadastrar();
        } else if (modificador == 2) {
            jButtonSalvar.setText("Editar");
            atualizar();
        }
    }//GEN-LAST:event_jButtonSalvarKeyPressed

    private void jTNomeCoputadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTNomeCoputadorFocusLost
        ClassEvents.focusLostTextField(jLabelNomeComputador, jTNomeCoputador);
    }//GEN-LAST:event_jTNomeCoputadorFocusLost

    private void jTMacCoputadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTMacCoputadorFocusLost
        ClassEvents.focusLostTextField(jLabelMac, jTMacCoputador);
    }//GEN-LAST:event_jTMacCoputadorFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabelMac;
    private javax.swing.JLabel jLabelNomeComputador;
    private javax.swing.JPanel jPComputador;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTId;
    private javax.swing.JTextField jTMacCoputador;
    private javax.swing.JTextField jTNomeCoputador;
    private javax.swing.JTable jTabelaComputador;
    // End of variables declaration//GEN-END:variables

    private void itensSelecionados() {
        int seleciona = jTabelaComputador.getSelectedRow();

        jTId.setText(String.valueOf(dados.get(seleciona).getId()));
        jTNomeCoputador.setText(dados.get(seleciona).getComputador());
        jTMacCoputador.setText(dados.get(seleciona).getMac());

    }

    private void preencherTabela() {

        String[] Colunas = new String[]{"Computador", "Endereço Mac", "Data Cadastro", "Última Auteração"};

        ComputadorDao computadorDao = new ComputadorDao();
        dados = computadorDao.listar();

        Tabela modelo = new TabelaComputador(dados, Colunas);
        jTabelaComputador.setModel(modelo);

        jTabelaComputador.getColumnModel().getColumn(0).setPreferredWidth(275);
        jTabelaComputador.getColumnModel().getColumn(0).setResizable(false);

        jTabelaComputador.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTabelaComputador.getColumnModel().getColumn(1).setResizable(false);

        jTabelaComputador.getColumnModel().getColumn(2).setPreferredWidth(325);
        jTabelaComputador.getColumnModel().getColumn(2).setResizable(false);

        jTabelaComputador.getColumnModel().getColumn(3).setPreferredWidth(325);
        jTabelaComputador.getColumnModel().getColumn(3).setResizable(false);

        jTabelaComputador.getTableHeader().setReorderingAllowed(false);
        jTabelaComputador.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTabelaComputador.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    private void limparCampos() {
        jTMacCoputador.setText("");
        jTNomeCoputador.setText("");
        jTId.setText("");
    }

    private void cadastrar() {
        if (valida()) {
            Computador computadorTemp = new Computador();

            computadorTemp.setComputador(jTNomeCoputador.getText());
            computadorTemp.setMac(jTMacCoputador.getText());
            computadorTemp.setUltimaAlteracao(ClassUtils.setDateMsqy());
            computadorTemp.setDataCadastro(ClassUtils.setDateMsqy());
            computadorTemp.setIdUsuarioCad((ClassUtils.getIdUsuario()));
            computadorTemp.setIdUsuarioAlt((ClassUtils.getIdUsuario()));

            ComputadorDao dao = new ComputadorDao();
            if (dao.cadastrarComputador(computadorTemp)) {
                limparCampos();
                modificarCampos();
                jBNovo.setEnabled(true);
                jBExcluir.setEnabled(false);
                jPComputador.setVisible(false);
                preencherTabela();

            }
        }
    }

    private void atualizar() {
        if (valida()) {
            Computador computadorTemp = new Computador();

            computadorTemp.setComputador(jTNomeCoputador.getText());
            computadorTemp.setMac(jTMacCoputador.getText());
            computadorTemp.setId(Integer.parseInt(jTId.getText()));
            computadorTemp.setUltimaAlteracao(ClassUtils.setDateMsqy());
            computadorTemp.setIdUsuarioAlt((ClassUtils.getIdUsuario()));

            ComputadorDao dao = new ComputadorDao();
            if (dao.atualizarComputador(computadorTemp)) {

                limparCampos();
                preencherTabela();
                modificarCampos();

                jPComputador.setVisible(false);
                jBNovo.setEnabled(true);
                jBExcluir.setEnabled(false);
            }
        }
    }

    private void modificarCampos() {
        jLabelMac.setForeground(Color.BLACK);
        jLabelNomeComputador.setForeground(Color.BLACK);
    }

    private void eventFocus() {

        ArrayList<Component> order = new ArrayList<>();
        order.add(jTNomeCoputador);
        order.add(jTMacCoputador);
        order.add(jButtonSalvar);
        order.add(jBCancelar);

        FocusLost focus = new FocusLost(order);
        setFocusTraversalPolicy(focus);
    }

    private boolean valida() {
        boolean retorno = true;
        if (jTMacCoputador.getText().equals("")) {
            retorno = false;
            jLabelMac.setForeground(Color.red);
        }
        if (jTNomeCoputador.getText().equals("")) {
            retorno = false;
            jLabelNomeComputador.setForeground(Color.red);
        }
        if (retorno == false) {
            JOptionPane.showMessageDialog(null, "Existe campos obrigatorios em branco");
        }
        return retorno;
    }

}
